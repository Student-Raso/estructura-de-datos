<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAASMAAAEZCAMAAADrH7PUAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAEgUExURf///9ro/AB51myOv9jY2AAAAOzs7GdnZ8TExEZGRvb29qSkpIKCggAA/1hYWJ+fny4u
        Ltro3sfo/ICA/21z/vv9/gYG/7Ofv73c/NDFsNDo/Nro7QsL/6nF7drcz/P2/vf6/e72/Z3M8JeY/72s
        sOfw/EGb4A0NDb29/6+v/4WF/7PS+1yp5bOsz8jj9+Hh4Z+53s/P/6Gj/2Rk/+Dv+ySN3NrQv7KystjY
        /z09/3J4/tfq+Wau56Wsz62fn3d3dzIy/xMU/47E7U+i4729vTs7O+Li/zeW38S5n09Q/9Lg/IG963K1
        6c7Sz8fHx6mfv5+fv5aWljc3NyAgIL2sv7OfsL2sn05OTouQ/vDw8J+fsIuLi19fX9Do3p+5xzZH317A
        6jgAAAtuSURBVHhe7Z0LWxPJEoaH42Qmk4QkqGG9ZCWY5aIorIJXWAEFL+vleNld9axnz///F6eq+5tA
        MKQHZoiVTr3PQ6ZnMmm+/qaquieJGCiKoiiTTJiEaA2k3Dz8dLnENMP+o/1UYjqlhh0/GOxROa6g1Uc5
        idA6QlhPn4gS9qd28PpKXEZrbDnGo8FmHO9R2kslNiEU1Xu9VuIqWmNLb3TVUokvfpSUqialrB0UUOX4
        Q6lkYyH1iI5G9QdNk1LVUvKuaTLQPGPPoODhjsPkLWdeacxdSrOklkR08aMkiao08l7AVONK2KQCZHPH
        1qNqepQ21VKVY6bndM1WIvKIu+DDPsSR9che9TD1pldfyIYymYLj6dPGozKFUwQDerlV6+0bj7gbHBpj
        4AYHCnlEmWYy7sCjmjEm9QilmI4icihDOQ+PekTne+RROnra2IFygPR7RMYc6xHBc1jPI4oweuT84i58
        8cgOm50x7nApod3UAXiE/YEe8cEosUWdXk175oFtsx7ZEjXG2DJMTlCS7cU1zE9H4whx8p1HIc1obEEv
        jug50x0a3Nno4yitGEfh4+kEPF4MGtFBlJrLkK5EMsKvrg5+hb1gvRAYFwaN6FBcIvsPgtgN9zh4eY+F
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>